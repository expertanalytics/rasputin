name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  RASPUTIN_DATA_DIR: examples/example_data

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      run_job: ${{ steps.check_dockerfile.outputs.run_job }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check Dockerfile
        id: check_dockerfile
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q "^Dockerfile$"; then
            echo "run_job=true" >> "$GITHUB_OUTPUT"
          else
            echo "run_job=false" >> "$GITHUB_OUTPUT"
          fi

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: check_changes
    if: ${{ needs.check_changes.outputs.run_job == 'true' }}
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}_${{ github.ref_name }}
          tags: |
              type=raw,value=latest,enable=true

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build:
    runs-on: ubuntu-latest
    needs: [check_changes, build-and-push-image]
    if: ${{ !failure() && !cancelled() }}
    container:
      image: ghcr.io/${{ github.repository }}_${{ github.ref_name }}

    steps:
    - uses: actions/checkout@v3

    - name: Copy dependencies
      run: |
          cp -rf /root/lib/* lib/

    - name: Install
      run: |
          pip -v install -e .

    - name: Rasputin Store
      run: |
          rasputin_store -x 24.015 24.035 24.035 24.015 -y 71.085 71.085 71.07 71.07 -ratio 1.0 -land-type-partition corine ingoya_test

    - name: Rasputin Web
      run: |
          rasputin_web -output examples/example_data/web/ingoya_test -material examples/example_data/materials/material.yaml ingoya_test

    - name: Run tests
      run: |
          pytest tests
          ./build/test_sun_position
